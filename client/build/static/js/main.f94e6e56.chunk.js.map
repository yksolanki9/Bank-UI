{"version":3,"sources":["components/Dropdown.js","components/GlobalStyles.js","components/SiteHeader.js","components/SearchBox.js","components/GlobalFilter.js","components/Table.js","components/App.js","index.js"],"names":["CustomSelect","styled","Select","Dropdown","props","classNamePrefix","defaultValue","selectedOption","onChange","setSelectedOption","options","GlobalStyles","createGlobalStyle","normalize","Container","header","Title","h1","SiteHeader","InputField","input","div","SearchBox","type","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","React","useState","value","setValue","useEffect","useAsyncDebounce","undefined","e","target","placeholder","Styles","Paginate","span","Table","columns","data","useTable","initialState","pageIndex","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","setPageSize","state","favorites","setFavorites","favsFromStorage","localStorage","getItem","JSON","parse","setItem","stringify","style","onClick","disabled","length","Number","width","pageSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","ifscCode","original","ifsc","getRowProps","includes","prevFavorites","filter","removeFav","color","size","addFav","cells","cell","getCellProps","App","useMemo","Header","accessor","label","setData","endPoint","a","window","caches","open","bankCache","match","cachedResponse","add","json","jsonCachedResponse","console","log","getCache","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.f94e6e56.chunk.js","sourcesContent":["import React from 'react';\nimport Select from \"react-select\";\nimport styled from 'styled-components';\n\nconst CustomSelect = styled(Select)`\n  margin: 10px 0 20px 40px;\n  width: 250px;\n  float : left\n`;\n\nconst Dropdown = (props) => {\n\n    return (\n    <CustomSelect\n      classNamePrefix={'Select'}\n      defaultValue={props.selectedOption}\n      onChange={props.setSelectedOption}\n      options={props.options}\n    />\n    );\n}\n\nexport default Dropdown;","import { normalize } from 'styled-normalize';\nimport { createGlobalStyle } from 'styled-components';\nimport \"@fontsource/nunito-sans\";\n\nconst GlobalStyles = createGlobalStyle`\n${normalize}\nbody {\n  background: hsl(0, 0%, 98%);\n  font-family: 'Nunito Sans', sans-serif;\n  font-weight: 300;\n  color: hsl(200, 15%, 8%);\n  transition: all .1s ease-out;\n}\nhtml {\n  box-sizing: border-box;\n}\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n`;\n\nexport default GlobalStyles;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.header`\n  transition: all 0.1s ease-out;\n  background: hsl(0, 0%, 100%);\n  padding: 40px 40px;\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 0 5px 10px hsla(207, 26%, 17%, 0.1);\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  font-size: 40px;\n  font-weight: 800;\n`;\n\nexport default function SiteHeader() {\n  return (\n    <Container>\n      <Title>Find your Bank</Title>\n    </Container>\n  );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst InputField = styled.input`\n  appearance: none;\n  background: transparent;\n  border: 5px;\n  color: inherit;\n  flex-grow: 1;\n  margin-left: 10px;\n\n  &::placeholder {\n    color: hsl(200, 15%, 8%);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  margin: 10px 20px;\n  border-radius: 5px;\n  background: hsl(0, 0%, 100%);\n  padding: 10px;\n  align-items: center;\n  max-width: 800px;\n  min-width: 600px;\n  flex-grow: 1;\n  float: left;\n  border: 0.5px solid;\n  border-color: rgba(50, 115, 220, 0.3);\n  height: 39px\n`;\n\nexport default function SearchBox(props) {\n  return (\n    <Container>  \n      <AiOutlineSearch />\n      <InputField type=\"search\" {...props} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport { useAsyncDebounce } from 'react-table';\nimport SearchBox from './SearchBox';\n\n\nexport default function GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n    selectedOption\n  }) {\n    const [value, setValue] = React.useState('');\n    React.useEffect(() => {\n        setValue('')\n      }, [selectedOption]);\n    const onChange = useAsyncDebounce((value) => {\n      setGlobalFilter(value || undefined);\n    }, 200);\n  \n    return (    \n        <SearchBox\n          value={value || \"\"}\n          onChange={(e) => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder=\"Enter a Keyword\"\n          />\n    );\n  }","import React from 'react';\nimport styled from \"styled-components\";\nimport { useTable, useFilters, useGlobalFilter, usePagination} from \"react-table\";\nimport { AiFillStar, AiOutlineStar, AiOutlineRight, AiOutlineLeft } from \"react-icons/ai\";\n\nimport GlobalFilter from './GlobalFilter';\n\nconst Styles = styled.div`\n  padding: 1rem;\n  text-align: center;\n  margin: 5px 40px;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n    margin: 70px\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n`;\n\nconst Paginate = styled.span`\n    display: inline-block;\n    margin: 10px;\n    padding: 6px;\n`;\n\nfunction Table({ columns, data, selectedOption }) {\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      prepareRow,\n  \n      page,\n      canPreviousPage,\n      canNextPage,\n      pageOptions,\n      gotoPage,\n      nextPage,\n      previousPage,\n      setPageSize,\n  \n      state,\n      preGlobalFilteredRows,\n      setGlobalFilter\n    } = useTable(\n      {\n        columns,\n        data,\n        initialState: { pageIndex: 0 }\n      },\n      useFilters, \n      useGlobalFilter,\n      usePagination\n    );\n    \n    const [favorites, setFavorites] = React.useState([]);\n\n    React.useEffect(() => {\n      let favsFromStorage = localStorage.getItem('favorites') || null;\n      favsFromStorage = JSON.parse(favsFromStorage);\n      setFavorites(favsFromStorage ? favsFromStorage : [])\n    }, []);\n    \n    React.useEffect(() => {\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n    }, [favorites]);\n\n    const addFav = ifscCode => {\n      setFavorites((prevFavorites) => [...prevFavorites, ifscCode]);\n    }\n\n    const removeFav = ifscCode => {\n      setFavorites((prevFavorites) => prevFavorites.filter((i) => i !== ifscCode));\n    }\n    \n    return (\n      <>\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={state.globalFilter}\n          setGlobalFilter={setGlobalFilter}\n          selectedOption={selectedOption}\n        />\n\n          <Paginate >\n          <span style={{\"padding\": \"10px\"}}>\n          <span style={{\"padding\": \"10px\"}}>\n            <AiOutlineLeft onClick={() => previousPage()} disabled={!canPreviousPage}/>\n            </span>\n\n          <span>\n          {\"   \"}\n            <strong>\n              {state.pageIndex + 1} of {pageOptions.length}\n            </strong>{\"   \"}\n          </span>\n\n          <span style={{\"padding\": \"5px\"}}>\n            <AiOutlineRight onClick={() => nextPage()} disabled={!canNextPage}/> \n          </span> \n          </span>\n\n          <span>\n            Go to page:{\" \"}\n            <input\n              onChange={(e) => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                gotoPage(page);\n              }}\n              style={{ width: \"50px\" }}\n            />\n          </span>{\" \"}\n            \n        \n\n          <select\n            value={state.pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50, 100].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </Paginate>\n\n        <Styles>\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row, i) => {\n              prepareRow(row);\n\n              const ifscCode = row.original.ifsc; \n              return (\n                <tr {...row.getRowProps()}>\n                  <td> \n                    {favorites.includes(ifscCode) ? (\n                          <AiFillStar \n                            onClick={() => removeFav(ifscCode)}\n                            style={{color : \"yellow\"}}\n                            size={28}\n                          />\n                        ) : (\n                          <AiOutlineStar\n                            onClick={() => addFav(ifscCode)}\n                            style={{color : \"yellow\"}}\n                            size={28}\n                          />\n                        )} \n                  </td>\n\n                  {row.cells.filter(cell => cell.value !== undefined).map((cell) => {\n                      return (\n                          <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                      );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <br />\n        </Styles>\n      </>\n    );\n  }\n\n\nexport default Table;","import React from \"react\";\nimport Dropdown from './Dropdown';\nimport GlobalStyles from \"./GlobalStyles\";\nimport SiteHeader from \"./SiteHeader\";\nimport Table from './Table';\n\n\n\nfunction App() {\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Favourite\",\n        accessor: 'fav'\n      },\n      {\n        Header: \"IFSC Code\",\n        accessor: \"ifsc\"\n      },\n      {\n        Header: \"Bank_Id\",\n        accessor: \"bank_id\"\n      },\n  \n      {\n        Header: \"Branch\",\n        accessor: \"branch\"\n      },\n      {\n        Header: \"Address\",\n        accessor: \"address\"\n      },\n      {\n        Header: \"City\",\n        accessor: \"city\"\n      },\n      {\n        Header: \"District\",\n        accessor: \"district\"\n      },\n      {\n        Header: \"State\",\n        accessor: \"state\"\n      }\n        ],\n    []\n  );\n  \n  const options = [\n    { value: 'bangalore', label: 'Bangalore' },\n    { value: 'mumbai', label: 'Mumbai' },\n    { value: 'delhi', label: 'Delhi' },\n    { value: 'ahmedabad', label: 'Ahmedabad' },\n    { value: 'kolkata', label: 'Kolkata' },\n  ];\n\n const [selectedOption, setSelectedOption] = React.useState(options[0]);\n    \n    const [data, setData] = React.useState([]); // use an empty array as initial value\n   \n    React.useEffect(() => {\n      const endPoint = \"/api/branches/city?q=\" + selectedOption['value'];\n\n      const getCache = async () => {\n        try {\n          if (\"caches\" in window) {\n            const bankCache = await caches.open(\"bank-cache\");\n    \n            var cachedResponse = await bankCache.match(endPoint);\n            if (!cachedResponse) {\n              await bankCache.add(endPoint);\n              cachedResponse = await bankCache.match(endPoint);\n            }\n    \n            const jsonCachedResponse = await cachedResponse.json();\n            setData(jsonCachedResponse);\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      getCache();\n    }, [selectedOption]);\n\n  return (\n    <div>\n    <GlobalStyles />\n    <SiteHeader />\n    <Dropdown options={options} selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\n    <Table columns={columns} data={data} selectedOption={selectedOption} />\n    </div>\n  );\n}\n\nexport default App;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n     <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}